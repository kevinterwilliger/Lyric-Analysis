# setwd("~/Desktop/GitHub/Econ490/Report3")
setwd("C:/Users/Kevin/Desktop/Github/Econ490/Report4")
# library(emo)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(gridExtra)
library(glmnet)
library(stringr)
library(SentimentAnalysis)
library(ggplot2)
library(dotwhisker)
library(stats)
library(xtable)
library(tree)
library(randomForest)
library(gbm)
library(xgboost)
library(keras)
# library(reticulate)
# new_data = read.csv("Data_and_feature.csv",header=T)
train_labels <- as.matrix(train[,"Rank"])
data = read.csv("data_oct23.csv",header = T) %>%
select(-1) %>%
filter(Loudness != 9999)
top_artists = data[data$Rank <= 10,] %>%
select(Artist) %>%
group_by(Artist) %>%
summarise(n = n()) %>%
filter(n > 1) %>%
pull(Artist)
data_topartist = data %>%
mutate(isTopArtist = ifelse(Artist %in% top_artists,1,0))
train_labels <- as.matrix(train[,"Rank"])
set.seed(1)
train = data_topartist %>%
select(-c(1:4,6:10,track,isTopArtist,genre)) %>%
sample_frac(.7)
test = data_topartist %>%
select(-c(1:4,6:10,track,isTopArtist,genre)) %>%
setdiff(train)
train_labels <- as.matrix(train[,"Rank"])
train_data <- as.matrix(train[!names(train) %in% c("Rank")])
test_data <- as.matrix(test[!names(train) %in% c("Rank")])
test_labels <- as.matrix(test[,"Rank"])
train_data <- scale(train_data)
test_data <- scale(test_data)
model <- keras_model_sequential() %>%
layer_dense(units = 64, activation = "relu",
input_shape = dim(train_data)[2]) %>%
layer_dense(units = 64, activation = "relu") %>%
layer_dense(units = 1)
library(reticulate)
train_labels <- as.matrix(train[,"Rank"])
train_data <- as.matrix(train[!names(train) %in% c("Rank")])
test_data <- as.matrix(test[!names(train) %in% c("Rank")])
test_labels <- as.matrix(test[,"Rank"])
train_data <- scale(train_data)
test_data <- scale(test_data)
model <- keras_model_sequential() %>%
layer_dense(units = 64, activation = "relu",
input_shape = dim(train_data)[2]) %>%
layer_dense(units = 64, activation = "relu") %>%
layer_dense(units = 1)
devtools::install_github("rstudio/keras")
devtools::install_github("rstudio/keras")
devtools::install_github("rstudio/keras")
install.packages("keras")
# setwd("~/Desktop/GitHub/Econ490/Report3")
setwd("C:/Users/Kevin/Desktop/Github/Econ490/Report4")
setwd("~/Desktop/GitHub/Econ490/Report3")
# setwd("C:/Users/Kevin/Desktop/Github/Econ490/Report4")
# library(emo)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(gridExtra)
library(glmnet)
library(stringr)
library(SentimentAnalysis)
library(ggplot2)
library(dotwhisker)
library(stats)
library(xtable)
library(tree)
install.packages("tree")
library(randomForest)
library(gbm)
library(xgboost)
library(keras)
library(reticulate)
data = read.csv("data_oct23.csv",header = T) %>%
select(-1) %>%
filter(Loudness != 9999)
top_artists = data[data$Rank <= 10,] %>%
select(Artist) %>%
group_by(Artist) %>%
summarise(n = n()) %>%
filter(n > 1) %>%
pull(Artist)
data_topartist = data %>%
mutate(isTopArtist = ifelse(Artist %in% top_artists,1,0))
set.seed(1)
train = data_topartist %>%
select(-c(1:4,6:10,track,isTopArtist,genre)) %>%
sample_frac(.7)
test = data_topartist %>%
select(-c(1:4,6:10,track,isTopArtist,genre)) %>%
setdiff(train)
train_labels <- as.matrix(train[,"Rank"])
train_data <- as.matrix(train[!names(train) %in% c("Rank")])
test_data <- as.matrix(test[!names(train) %in% c("Rank")])
test_labels <- as.matrix(test[,"Rank"])
train_data <- scale(train_data)
test_data <- scale(test_data)
model <- keras_model_sequential() %>%
layer_dense(units = 64, activation = "relu",
input_shape = dim(train_data)[2]) %>%
layer_dense(units = 64, activation = "relu") %>%
layer_dense(units = 1)
